<launch>
  <!-- Tham số dùng chung -->
  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>
  <arg name="model" default="$(find robot)/urdf/Robot.urdf"/>

  <!-- Khởi động thế giới Gazebo -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find tiny_slam)/worlds/hh.world"/>
    <arg name="debug" value="$(arg debug)" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="headless" value="$(arg headless)"/>
  </include>

  <!-- Đặt tham số use_sim_time -->
  <param name="/use_sim_time" value="true"/>

  <!-- Load URDF -->
  <param name="robot_description" textfile="$(find robot)/urdf/Robot.urdf"/>

  <!-- Spawn robot vào Gazebo -->
  <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen" 
        args="-urdf -model robot -z 0 -Y 0.075 -param robot_description"/>

  <!-- Giả lập joint calibration -->
  <node name="fake_joint_calibration" pkg="rostopic" type="rostopic" 
        args="pub /calibrated std_msgs/Bool true --once" output="screen"/>

  <!-- Robot State Publisher -->
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher">
    <param name="publish_frequency" value="30.0"/>
    <param name="tf_prefix" value=""/>
  </node>

  <!-- Joint State Publisher (GUI) -->
  <node name="joint_state_publisher_gui" pkg="joint_state_publisher_gui" type="joint_state_publisher_gui">
    <param name="use_gui" value="true"/>
    <param name="rate" value="30"/>
    <param name="publish_tf" value="false"/>
  </node>

  <!-- Node tiny_slam -->
  <node name="tiny_slam" pkg="tiny_slam" type="tiny_slam" output="screen" required="true">
    <!-- Remap topic laser scan từ Gazebo -->
    <remap from="laser_scan" to="/base_scan" />

    <!-- Modules setup -->
    <param name="cell_type" value="avg" />
    <param name="occupancy_estimator" value="const" />
    <param name="skip_exceeding_lsr_vals" value="false" />

    <!-- Frame names setup -->
    <param name="odom_frame" value="odom_combined" />
    <param name="robot_pose_frame" value="base_footprint" />

    <!-- Map setup -->
    <param name="map_height_in_meters" value="20.0" />
    <param name="map_width_in_meters" value="20.0" />
    <param name="map_meters_per_cell" value="0.05" />

    <!-- Internal constants setup -->
    <param name="base_occupied_prob" value="0.95" />
    <param name="base_empty_prob" value="0.01" />
    <param name="hole_width" value="0.05" />

    <!-- Internal scan matcher constants -->
    <param name="scmtch_sigma_XY_MonteCarlo" value="0.01" />
    <param name="scmtch_sigma_theta_MonteCarlo" value="0.02" />
    <param name="scmtch_limit_of_bad_attempts" value="20" />
    <param name="scmtch_limit_of_total_attempts" value="100" />

    <!-- Internal constants for ROS -->
    <param name="ros_rviz_map_publishing_rate" value="20.0" />
    <param name="ros_tf_buffer_duration" value="5.0" />
    <param name="ros_filter_queue_size" value="100" />
    <param name="ros_subscribers_queue_size" value="1000" />
  </node>

  <!-- Transform tĩnh giữa odom và map -->
  <node name="MapTransformPublisher" pkg="tf" type="static_transform_publisher"
        args="0 0 0 0 0 0 odom_combined map  100" cwd="node" required="true"/>

  <!-- control -->
  <node name="control" pkg="robot" type="keyboard.py" output="screen" />

  <!-- RViz -->
  <node name="rviz" pkg="rviz" type="rviz" args="-d $(find robot)/rviz/robot.rviz" output="screen"/>
</launch>